

#region license

/// <License>
/// <FileLabel>BearcatSoft(R) Library</FileLabel>
/// <Copyrights>Copyright (C) 2003 - 2004, BearcatSoft(R). All rights reserved.
/// The software and associated documentation supplied hereunder 
/// are the proprietary information of BearcatSoft(R) and are supplied 
/// subject to licence terms.
/// </Copyrights>
/// <Product>This file was generated by BearcatSoft Genarator(R)</Product>
/// <LicenseDetails>http://BearcatSoft.no-ip.com/GeneratorLicense</LicenseDetails>
/// <LicenseDetails2>http://www.BearcatSoft.com/GeneratorLicense</LicenseDetails2>
/// <Contact>http://BearcatSoft.no-ip.com</Contact>
/// <Contact2>http://www.BearcatSoft.com</Contact2>
/// <Company>BearcatSoft(R)</Company>
/// <Trademarks>BearcatSoft(R), BearcatSoft Generator(R) are a registered trademarks of BearcatSoft company</Trademarks>
/// </License>
/// 
#endregion

#region usings

using System;
using System.Collections.Specialized ;

using BearcatSoft.BSGen.Framework;
using BearcatSoft.BSGen.Framework.Components.CBSGFieldItem;
using BearcatSoft.BSGen.Framework.Components.CBSGFieldItemGroup;
using BearcatSoft.BSGen.Framework.Components.CBSGClass ;
using BearcatSoft.BSGen.Framework.Components.CBSGTemplate;
using BearcatSoft.BSGen.Framework.Components.CBSGView ;
using BearcatSoft.BSGen.Framework.Components.CBSGForeignField ;
using BearcatSoft.BSGen.Framework.Components.CBSGForeignFieldGroup ;

using BearcatSoft.BSGen.Engine.Classes.FieldsHelpers;
using BearcatSoft.BSGen.Engine.Generator.Components ;
using BearcatSoft.BSGen.Engine.Classes.ModelHelpers ;
using BearcatSoft.BSGen.EngineF35.Generator.DataAccessProjects.BSGA.Components.DAL.Providers;
#endregion


namespace BearcatSoft.BSGen.EngineF35.Generator.oraclejee_mvc.src.main.java.com.sprhib.dao
{	

	[GenerateANDCondition(new string[]{"GENER_LIB_DATAACCESS_DATAACCESS"})]
    [BSGTemplate(typeof(BSGClass), SourceCodeType.JSP_SourceCodeType
        , @"oraclejee-mvc\src\main\webapp\WEB-INF\pages\")]
    public class BSG_OracleJEE_list_view : ProxyBaseClass
	{

        #region protected override Generate functions

		protected override void GenerateSourceForModel(BearcatSoft.BSGen.Framework.Components.CBSGModel.BSGModel item, BSGSourceFile src)
		{
		}

        protected override void GenerateSource(
            BSGClass item
            , BSGSourceFile src)
        {
            BearcatSoft.BSGen.Framework.Components.CBSGCLSType.BSGCLSType.BSGCLSType_Modified = "java";

            this.InitializeGenerator(
                item
                , src
                , ModelForGenerator);

            src.FileName = "View" + this.IBSBSGClass.MHIBSNameLowerCase + @"";

            this.IBSBSGClass.SetChoosedDataSet_First();

            this.gener_view();

            this.gener_fields();
            this.gener_footer();

        }

        public void gener_view()
        {

            this.Src.AddLn(@"
<?xml version=" + PP() + @"1.0" + PP() + @" encoding=" + PP() + @"UTF-8" + PP() + @" ?>
<!DOCTYPE html PUBLIC " + PP() + @"-//W3C//DTD XHTML 1.0 Transitional//EN" + PP() + @" " + PP() + @"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" + PP() + @">
");

            this.Src.AddLn(@"<html xmlns=" + PP() + @"http://www.w3.org/1999/xhtml" + PP() + @"
      xmlns:ui=" + PP() + @"http://xmlns.jcp.org/jsf/facelets" + PP() + @"
      xmlns:h=" + PP() + @"http://xmlns.jcp.org/jsf/html" + PP() + @"
      xmlns:f=" + PP() + @"http://xmlns.jcp.org/jsf/core" + PP() + @">
");

            this.Src.AddLn(@"
    <ui:composition template=" + PP() + @"/template.xhtml" + PP() + @">
        <ui:define name=" + PP() + @"title" + PP() + @">
            <h:outputText value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"Title}" + PP() + @"></h:outputText>
        </ui:define>");

            this.Src.AddLn(@"
        <ui:define name=" + PP() + @"body" + PP() + @">
            <h:form styleClass=" + PP() + @"jsfcrud_list_form" + PP() + @">
                <h:panelGroup id=" + PP() + @"messagePanel" + PP() + @" layout=" + PP() + @"block" + PP() + @">
                    <h:messages errorStyle=" + PP() + @"color: red" + PP() + @" infoStyle=" + PP() + @"color: green" + PP() + @" layout=" + PP() + @"table" + PP() + @"/>
                </h:panelGroup>");

            this.Src.AddLn(@"
                <h:outputText escape=" + PP() + @"false" + PP() + @" value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"Empty}" + PP() + @" rendered=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.items.rowCount == 0}" + PP() + @"/>
                <h:panelGroup rendered=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.items.rowCount > 0}" + PP() + @">
                    <h:outputText value=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.pageFirstItem + 1}..#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.pageLastItem + 1}/#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.itemsCount}" + PP() + @"/>&nbsp;
                    <h:commandLink action=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.previous}" + PP() + @" value=" + PP() + @"{Previous} #{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.pageSize}" + PP() + @" rendered=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.hasPreviousPage}" + PP() + @"/>&nbsp;
                    <h:commandLink action=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.next}" + PP() + @" value=" + PP() + @"{Next} #{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.pageSize}" + PP() + @" rendered=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.pagination.hasNextPage}" + PP() + @"/>&nbsp;
                    <h:dataTable value=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.items}" + PP() + @" var=" + PP() + @"item" + PP() + @" border=" + PP() + @"0" + PP() + @" cellpadding=" + PP() + @"2" + PP() + @" cellspacing=" + PP() + @"0" + PP() + @" rowClasses=" + PP() + @"jsfcrud_odd_row,jsfcrud_even_row" + PP() + @" rules=" + PP() + @"all" + PP() + @" style=" + PP() + @"border:solid 1px" + PP() + @">");

            this.gener_fields();


            this.Src.AddLn(@"
                        <h:column>
                            <f:facet name=" + PP() + @"header" + PP() + @">
                                <h:outputText value=" + PP() + @"&nbsp;" + PP() + @"/>
                            </f:facet>
                            <h:commandLink action=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.prepareView}" + PP() + @" value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"ViewLink}" + PP() + @"/>
                            <h:outputText value=" + PP() + @" " + PP() + @"/>
                            <h:commandLink action=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.prepareEdit}" + PP() + @" value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"EditLink}" + PP() + @"/>
                            <h:outputText value=" + PP() + @" " + PP() + @"/>
                            <h:commandLink action=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.destroy}" + PP() + @" value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"DestroyLink}" + PP() + @"/>
                        </h:column>
                    </h:dataTable>
                </h:panelGroup>");

            this.Src.AddLn(@"
                <br />
                <h:commandLink action=" + PP() + @"#{" + PP() + this.IBSBSGClass.MHIBSNameJavaCaseLower + @"Controller.prepareCreate}" + PP() + @" value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"CreateLink}" + PP() + @"/>
                <br />
                <br />
                <h:link outcome=" + PP() + @"/index" + PP() + @" value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"IndexLink}" + PP() + @"/>
            </h:form>
        </ui:define>
    </ui:composition>");

            this.Src.AddLn(@"

</html>

");

        }

        public void gener_footer()
        {

           

        }

        public void gener_fields()
        {

            foreach (BSGFieldItem dd_fi in this.IBSBSGClass.MHIBSChoosedDataSet.ClassFields)
            {

                this.Src.AddLn(@"
                        <h:column>
                            <f:facet name=" + PP() + @"header" + PP() + @">
                                <h:outputText value=" + PP() + @"{List" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"Title_count}" + PP() + @"/>
                            </f:facet>
                            <h:outputText value=" + PP() + @"#{item.count}" + PP() + @"/>
                        </h:column>");

            }


        }

        public void add_list_fields()
        {        
        }

        public void add_edit_fields()
        {
        }

        public static string PP()
        {
            return @"""";
        }

		#endregion

	}
 
}
