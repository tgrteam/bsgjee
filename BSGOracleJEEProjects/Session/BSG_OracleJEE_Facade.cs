

#region license

/// <License>
/// <FileLabel>BearcatSoft(R) Library</FileLabel>
/// <Copyrights>Copyright (C) 2003 - 2004, BearcatSoft(R). All rights reserved.
/// The software and associated documentation supplied hereunder 
/// are the proprietary information of BearcatSoft(R) and are supplied 
/// subject to licence terms.
/// </Copyrights>
/// <Product>This file was generated by BearcatSoft Genarator(R)</Product>
/// <LicenseDetails>http://BearcatSoft.no-ip.com/GeneratorLicense</LicenseDetails>
/// <LicenseDetails2>http://www.BearcatSoft.com/GeneratorLicense</LicenseDetails2>
/// <Contact>http://BearcatSoft.no-ip.com</Contact>
/// <Contact2>http://www.BearcatSoft.com</Contact2>
/// <Company>BearcatSoft(R)</Company>
/// <Trademarks>BearcatSoft(R), BearcatSoft Generator(R) are a registered trademarks of BearcatSoft company</Trademarks>
/// </License>
/// 
#endregion

#region usings

using System;
using System.Collections.Specialized ;

using BearcatSoft.BSGen.Framework;
using BearcatSoft.BSGen.Framework.Components.CBSGFieldItem;
using BearcatSoft.BSGen.Framework.Components.CBSGFieldItemGroup;
using BearcatSoft.BSGen.Framework.Components.CBSGClass ;
using BearcatSoft.BSGen.Framework.Components.CBSGTemplate;
using BearcatSoft.BSGen.Framework.Components.CBSGView ;
using BearcatSoft.BSGen.Framework.Components.CBSGForeignField ;
using BearcatSoft.BSGen.Framework.Components.CBSGForeignFieldGroup ;

using BearcatSoft.BSGen.Engine.Classes.FieldsHelpers;
using BearcatSoft.BSGen.Engine.Generator.Components ;
using BearcatSoft.BSGen.Engine.Classes.ModelHelpers ;
using BearcatSoft.BSGen.EngineF35.Generator.DataAccessProjects.BSGA.Components.DAL.Providers;
#endregion




namespace BearcatSoft.BSGen.EngineF35.Generator.oraclejee_mvc.src.etp.vm.gen.session
{	

	[GenerateANDCondition(new string[]{"GENER_LIB_DATAACCESS_DATAACCESS"})]
    [BSGTemplate(typeof(BSGClass), SourceCodeType.Java_SourceCodeType
        , @"oraclejee-mvc\src\etp\vm\gen\session")]
    public class BSG_OracleJEE_Facade : ProxyBaseClass
	{

        #region protected override Generate functions

		protected override void GenerateSourceForModel(BearcatSoft.BSGen.Framework.Components.CBSGModel.BSGModel item, BSGSourceFile src)
		{
		}
        #endregion


        #region GenerateSource

        protected override void GenerateSource(
            BSGClass item
            , BSGSourceFile src)
		{
            BearcatSoft.BSGen.Framework.Components.CBSGCLSType.BSGCLSType.BSGCLSType_Modified = "java";

            this.InitializeGenerator(
                item
                , src
                , ModelForGenerator);

            src.FileName = "" + this.IBSBSGClass.MHIBSNameJavaCase + @"Service";

            this.IBSBSGClass.SetChoosedDataSet_First();
 
            this.Src.AddLn(@"

package etp.vm.gen.session;
import etp.vm.gen.entity." + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @";
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
");

            this.Src.AddLn(@"
/**
 *
 * @author jactracz
 */
");

            this.Src.AddLn(@"
@Stateless
public class " + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"Facade extends AbstractFacade<" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"> {
    @PersistenceContext(unitName = " + PP() + @"EtpVmV2PU" + PP() + @")
    private EntityManager em;

    @Override
    protected EntityManager getEntityManager() {
        return em;
    }

    public " + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @"Facade() {
        super(" + PP() + this.IBSBSGClass.MHIBSNameJavaCase + @".class);
    }
    
}

");
		}
        #endregion

        #region PP

        public static string PP()
        {
            return @"""";
        }

		#endregion

	}
 
}
