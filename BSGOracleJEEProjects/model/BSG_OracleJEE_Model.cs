

#region license

/// <License>
/// <FileLabel>BearcatSoft(R) Library</FileLabel>
/// <Copyrights>Copyright (C) 2003 - 2004, BearcatSoft(R). All rights reserved.
/// The software and associated documentation supplied hereunder 
/// are the proprietary information of BearcatSoft(R) and are supplied 
/// subject to licence terms.
/// </Copyrights>
/// <Product>This file was generated by BearcatSoft Genarator(R)</Product>
/// <LicenseDetails>http://BearcatSoft.no-ip.com/GeneratorLicense</LicenseDetails>
/// <LicenseDetails2>http://www.BearcatSoft.com/GeneratorLicense</LicenseDetails2>
/// <Contact>http://BearcatSoft.no-ip.com</Contact>
/// <Contact2>http://www.BearcatSoft.com</Contact2>
/// <Company>BearcatSoft(R)</Company>
/// <Trademarks>BearcatSoft(R), BearcatSoft Generator(R) are a registered trademarks of BearcatSoft company</Trademarks>
/// </License>
/// 
#endregion

#region usings

using System;
using System.Collections.Specialized ;

using BearcatSoft.BSGen.Framework;
using BearcatSoft.BSGen.Framework.Components.CBSGFieldItem;
using BearcatSoft.BSGen.Framework.Components.CBSGFieldItemGroup;
using BearcatSoft.BSGen.Framework.Components.CBSGClass ;
using BearcatSoft.BSGen.Framework.Components.CBSGTemplate;
using BearcatSoft.BSGen.Framework.Components.CBSGView ;
using BearcatSoft.BSGen.Framework.Components.CBSGForeignField ;
using BearcatSoft.BSGen.Framework.Components.CBSGForeignFieldGroup ;

using BearcatSoft.BSGen.Engine.Classes.FieldsHelpers;
using BearcatSoft.BSGen.Engine.Generator.Components ;
using BearcatSoft.BSGen.Engine.Classes.ModelHelpers ;
using BearcatSoft.BSGen.EngineF35.Generator.DataAccessProjects.BSGA.Components.DAL.Providers;
#endregion




namespace BearcatSoft.BSGen.EngineF35.Generator.oraclejee_mvc.src.main.java.com.sprhib.model
{	
	[GenerateANDCondition(new string[]{"GENER_LIB_DATAACCESS_DATAACCESS"})]
    [BSGTemplate(typeof(BSGClass), SourceCodeType.Java_SourceCodeType, @"oraclejee-mvc\src\main\java\com\sprhib\model\")]
    public class BSG_OracleJEE_Model : ProxyBaseClass
	{


        #region protected override Generate functions

		protected override void GenerateSourceForModel(BearcatSoft.BSGen.Framework.Components.CBSGModel.BSGModel item, BSGSourceFile src)
		{
		}

		protected override void GenerateSource(
            BSGClass item
            , BSGSourceFile src)
		{
            BearcatSoft.BSGen.Framework.Components.CBSGCLSType.BSGCLSType.BSGCLSType_Modified = "java";            
 
            this.InitializeGenerator(
                item
                , src
                , ModelForGenerator);

            src.FileName = "" + this.IBSBSGClass.MHIBSNameJavaCase + @"";

            this.IBSBSGClass.SetChoosedDataSet_First();
 
            this.Src.AddLn(@"

package com.sprhib.model;
import java.sql.Date;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

");

            this.Src.AddLn(@"
@Entity
@Table(name=" + PP() + this.IBSBSGClass.MHIBSName  + PP() + @")");

            this.Src.AddLn(@"
public class " + this.IBSBSGClass.MHIBSNameJavaCase + " " + @" 
{");

                int ii = 0;
                foreach (BSGFieldItem dd_fi in this.IBSBSGClass.MHIBSChoosedDataSet.ClassFields)
                {

                    
                    string c_type_converted = dd_fi.PBSGFINetType.PBSGNTCLSType.BSGCLSType_ClsTypeConverted();
                    string c_type_not_converted = dd_fi.PBSGFINetType.PBSGNTCLSType.ClsType ;
                    if (ii == 0)
                    {
                        this.Src.AddLn(@"
    @Id
    @GeneratedValue
    @Column(name=" + PP() + dd_fi.PBSGFieldItemSql.SqlOriginalName  + PP() + @")
    private " + c_type_converted  + " " + dd_fi.Name + @";");
                    }
                    else
                    {

                        if (c_type_not_converted == "java.util.Date" || c_type_not_converted == "Date"
                            || c_type_not_converted == "DateTime")
                        {

                            bool to_dt = false;
                            if (to_dt)
                            {
                                this.Src.AddLn(@"
    @Column(name = " + PP() + dd_fi.PBSGFieldItemSql.SqlOriginalName + PP() + @", columnDefinition=" + PP() + @"DATETIME" + PP() + @")
    @Temporal(TemporalType.TIMESTAMP)");
                            }
                            else
                            {
                                this.Src.AddLn(@"
    @GeneratedValue
    @Column(name = " + PP() + dd_fi.PBSGFieldItemSql.SqlOriginalName + PP() + @", columnDefinition=" + PP() + @"VARCHAR" + PP() + @")");
                            }

                        }
                        else
                        {
                            this.Src.AddLn(@"                        
    @GeneratedValue
    @Column(name=" + PP() + dd_fi.PBSGFieldItemSql.SqlOriginalName + PP() + @")");

                        }

            this.Src.AddLn(@"    private " + c_type_converted + " " + dd_fi.Name + @";");

                    }
                    ii++;

                }

                foreach (BSGFieldItem dd_fi in this.IBSBSGClass.MHIBSChoosedDataSet.ClassFields)
                {

                    string c_type = dd_fi.PBSGFINetType.PBSGNTCLSType.BSGCLSType_ClsTypeConverted();

                    this.Src.AddLn(@"
	public " + c_type + @" get" + dd_fi.Name + @"() {
		return " + dd_fi.Name + @";
	}
");

                    this.Src.AddLn(@"

	public void set" + dd_fi.Name + @"(" + c_type + " " + dd_fi.Name + @") {");

            this.Src.AddLn(@"
		this." + dd_fi.Name + @" = " + dd_fi.Name + @";
	}");
                }


            this.Src.AddLn(@"
}
");
		}
        public static string PP()
        {
            return @"""";
        }
		#endregion

	}
 
}
